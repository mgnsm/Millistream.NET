variables:
  buildConfiguration: 'release'

jobs:
- job: Unix
  strategy:
    matrix:
      Ubuntu:
        imageName: 'ubuntu-16.04'
      macOS:
        imageName: 'macOS-10.14'
    maxParallel: 2
  pool:
    vmImage: $(imageName)
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet Packages and Build Millistream.Streaming For .NET Standard Only'
    inputs:
     command: build
     projects: Source/Millistream.Streaming/Millistream.Streaming.csproj
     arguments: '-c $(buildConfiguration) -f netstandard1.2'

  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet Packages and Build The Other Projects for .NET Core'
    inputs:
     command: build
     projects: |
      **/*.csproj
      !**/Millistream.Streaming.csproj
     arguments: '-c $(buildConfiguration) -f netcoreapp2.1'

  - template: unit-tests.yml

  - bash: |
     sudo wget "https://packages.millistream.com/apt/sources.list.d/`lsb_release -cs`.list" -O /etc/apt/sources.list.d/millistream.list 
     wget -q "https://packages.millistream.com/D2FCCE35.gpg" -O- | sudo apt-key add - 
     sudo apt update
     sudo apt-get install libmdf
    displayName: Download and Install libmdf on Ubuntu
    condition: eq( variables['Agent.OS'], 'Linux' )

  - bash: |
     curl -O https://packages.millistream.com/macOS/libmdf-1.0.21.pkg 
     sudo installer -pkg libmdf-1.0.21.pkg -target /
    displayName: Download and Install libmdf on macOS
    condition: eq( variables['Agent.OS'], 'Darwin' )

  - template: integration-tests.yml

- job: Windows
  pool:
    vmImage: 'windows-2019'
  variables:
    major: 1
    minor: 1
    patch: $[counter('v111', 1)]
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet Packages and Build Solution For All TargetFrameworks'
    inputs:
     command: build
     projects: 'Millistream.NET.sln'
     arguments: '-c $(buildConfiguration) -p:Version=$(major).$(minor).$(patch)'

  - template: unit-tests.yml

  - powershell: |
     (new-object System.Net.WebClient).DownloadFile('ftp://ftp.millistream.com/binaries/windows/libmdf-1.0.23.exe','libmdf-1.0.23.exe')
     .\libmdf-1.0.23.exe /S
    displayName: 'Download and Install Native Assemblies'

  - template: integration-tests.yml

  - task: CopyFiles@2
    displayName: 'Copy the .csproj file and the compiled binaries to the staging directory'
    inputs:
     SourceFolder: 'Source/Millistream.Streaming/'
     Contents: |
      Millistream.Streaming.csproj
      bin/$(buildConfiguration)/**
     TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
     pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
     artifactName: 'drop'