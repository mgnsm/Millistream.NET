name: Millistream.Streaming.DataTypes CD

on:
  push:
    tags:        
     - 'v*-datatypes'

jobs:
  Build:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Get Version From Tag
      shell: bash
      run: |
        version=${GITHUB_REF/refs\/tags\//} # = v1.1.1-datatypes
        parts=(${version//./ }) # Replace '.' with ' '
        echo "major=${parts[0]#*v}" >> $GITHUB_ENV # Remove "v" prefix
        echo "minor=${parts[1]}" >> $GITHUB_ENV
        echo "patch=${parts[2]%-datatypes}" >> $GITHUB_ENV # Remove "-datatypes" suffix

    - name: Build
      shell: bash
      run: |
        version=$major.$minor.$patch
        dotnet build Source/Millistream.Streaming.DataTypes/Millistream.Streaming.DataTypes.csproj -c Release -p:Version=$version
        dotnet build Tests/Millistream.Streaming.DataTypes.UnitTests/Millistream.Streaming.DataTypes.UnitTests.csproj -c Release -p:Version=$version

    - name: Test
      run: |
        dotnet test Tests/Millistream.Streaming.DataTypes.UnitTests/Millistream.Streaming.DataTypes.UnitTests.csproj -c Release --no-build --no-restore

    - name: Pack
      if: ${{ matrix.os == 'windows-latest' }}
      shell: bash
      run: |
        dotnet pack Source/Millistream.Streaming.DataTypes/Millistream.Streaming.DataTypes.csproj -c Release /property:PackageVersion=$major.$minor.$patch --no-build --no-restore

    - name: Upload Artifact
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-artifact@v2
      with:
        name: Millistream.Streaming.Datatypes
        path: 'Source/Millistream.Streaming.Datatypes/bin/Release/**/*.nupkg'
        if-no-files-found: error